/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>
#include <gui/screengenfluxvideo1_screen/Screengenfluxvideo1View.hpp>
#include <gui/screengenfluxvideo1_screen/Screengenfluxvideo1Presenter.hpp>
#include <gui/screengenfluxvideo2_screen/Screengenfluxvideo2View.hpp>
#include <gui/screengenfluxvideo2_screen/Screengenfluxvideo2Presenter.hpp>
#include <gui/screengenfluxvideo3_screen/Screengenfluxvideo3View.hpp>
#include <gui/screengenfluxvideo3_screen/Screengenfluxvideo3Presenter.hpp>
#include <gui/screengenfluxvideo4_screen/Screengenfluxvideo4View.hpp>
#include <gui/screengenfluxvideo4_screen/Screengenfluxvideo4Presenter.hpp>
#include <gui/screenanalyseb_screen/ScreenanalysebView.hpp>
#include <gui/screenanalyseb_screen/ScreenanalysebPresenter.hpp>
#include <gui/screenanalysef_screen/ScreenanalysefView.hpp>
#include <gui/screenanalysef_screen/ScreenanalysefPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
}

/*
 * Screen Transition Declarations
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoscreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoscreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoscreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreenScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screengenfluxvideo1

void FrontendApplicationBase::gotoScreengenfluxvideo1ScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreengenfluxvideo1ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreengenfluxvideo1ScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<Screengenfluxvideo1View, Screengenfluxvideo1Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoScreengenfluxvideo1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreengenfluxvideo1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreengenfluxvideo1ScreenNoTransitionImpl()
{
    touchgfx::makeTransition<Screengenfluxvideo1View, Screengenfluxvideo1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screengenfluxvideo2

void FrontendApplicationBase::gotoScreengenfluxvideo2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreengenfluxvideo2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreengenfluxvideo2ScreenNoTransitionImpl()
{
    touchgfx::makeTransition<Screengenfluxvideo2View, Screengenfluxvideo2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screengenfluxvideo3

void FrontendApplicationBase::gotoScreengenfluxvideo3ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreengenfluxvideo3ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreengenfluxvideo3ScreenNoTransitionImpl()
{
    touchgfx::makeTransition<Screengenfluxvideo3View, Screengenfluxvideo3Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screengenfluxvideo4

void FrontendApplicationBase::gotoScreengenfluxvideo4ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreengenfluxvideo4ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreengenfluxvideo4ScreenNoTransitionImpl()
{
    touchgfx::makeTransition<Screengenfluxvideo4View, Screengenfluxvideo4Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screenanalyseb

void FrontendApplicationBase::gotoScreenanalysebScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenanalysebScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenanalysebScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<ScreenanalysebView, ScreenanalysebPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screenanalysef

void FrontendApplicationBase::gotoScreenanalysefScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenanalysefScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenanalysefScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<ScreenanalysefView, ScreenanalysefPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
