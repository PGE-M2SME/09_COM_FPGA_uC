/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENANALYSEFVIEWBASE_HPP
#define SCREENANALYSEFVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenanalysef_screen/ScreenanalysefPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ScreenanalysefViewBase : public touchgfx::View<ScreenanalysefPresenter>
{
public:
    ScreenanalysefViewBase();
    virtual ~ScreenanalysefViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard HBlanking;
    touchgfx::TextAreaWithOneWildcard VBlanking;
    touchgfx::TextAreaWithOneWildcard Frameformat;
    touchgfx::TextAreaWithOneWildcard VSync;
    touchgfx::TextAreaWithOneWildcard HSync;
    touchgfx::TextAreaWithOneWildcard HResolution;
    touchgfx::TextAreaWithOneWildcard VResolution;
    touchgfx::TextAreaWithOneWildcard VideoFormat;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HBLANKING_SIZE = 5;
    touchgfx::Unicode::UnicodeChar HBlankingBuffer[HBLANKING_SIZE];
    static const uint16_t VBLANKING_SIZE = 5;
    touchgfx::Unicode::UnicodeChar VBlankingBuffer[VBLANKING_SIZE];
    static const uint16_t FRAMEFORMAT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar FrameformatBuffer[FRAMEFORMAT_SIZE];
    static const uint16_t VSYNC_SIZE = 5;
    touchgfx::Unicode::UnicodeChar VSyncBuffer[VSYNC_SIZE];
    static const uint16_t HSYNC_SIZE = 5;
    touchgfx::Unicode::UnicodeChar HSyncBuffer[HSYNC_SIZE];
    static const uint16_t HRESOLUTION_SIZE = 5;
    touchgfx::Unicode::UnicodeChar HResolutionBuffer[HRESOLUTION_SIZE];
    static const uint16_t VRESOLUTION_SIZE = 5;
    touchgfx::Unicode::UnicodeChar VResolutionBuffer[VRESOLUTION_SIZE];
    static const uint16_t VIDEOFORMAT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar VideoFormatBuffer[VIDEOFORMAT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenanalysefViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREENANALYSEFVIEWBASE_HPP
